// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/chapter/chapter.proto

package chapter

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/arkhaix/lit-reader/api/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetChapterRequest struct {
	StoryId              string   `protobuf:"bytes,1,opt,name=storyId,proto3" json:"storyId,omitempty"`
	ChapterId            int32    `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChapterRequest) Reset()         { *m = GetChapterRequest{} }
func (m *GetChapterRequest) String() string { return proto.CompactTextString(m) }
func (*GetChapterRequest) ProtoMessage()    {}
func (*GetChapterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chapter_bd7a7ba3c89d59b3, []int{0}
}
func (m *GetChapterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChapterRequest.Unmarshal(m, b)
}
func (m *GetChapterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChapterRequest.Marshal(b, m, deterministic)
}
func (dst *GetChapterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChapterRequest.Merge(dst, src)
}
func (m *GetChapterRequest) XXX_Size() int {
	return xxx_messageInfo_GetChapterRequest.Size(m)
}
func (m *GetChapterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChapterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChapterRequest proto.InternalMessageInfo

func (m *GetChapterRequest) GetStoryId() string {
	if m != nil {
		return m.StoryId
	}
	return ""
}

func (m *GetChapterRequest) GetChapterId() int32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

type GetChapterResponse struct {
	Status               *common.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *Chapter       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetChapterResponse) Reset()         { *m = GetChapterResponse{} }
func (m *GetChapterResponse) String() string { return proto.CompactTextString(m) }
func (*GetChapterResponse) ProtoMessage()    {}
func (*GetChapterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chapter_bd7a7ba3c89d59b3, []int{1}
}
func (m *GetChapterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChapterResponse.Unmarshal(m, b)
}
func (m *GetChapterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChapterResponse.Marshal(b, m, deterministic)
}
func (dst *GetChapterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChapterResponse.Merge(dst, src)
}
func (m *GetChapterResponse) XXX_Size() int {
	return xxx_messageInfo_GetChapterResponse.Size(m)
}
func (m *GetChapterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChapterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChapterResponse proto.InternalMessageInfo

func (m *GetChapterResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetChapterResponse) GetData() *Chapter {
	if m != nil {
		return m.Data
	}
	return nil
}

type Chapter struct {
	StoryId              string   `protobuf:"bytes,1,opt,name=storyId,proto3" json:"storyId,omitempty"`
	ChapterId            int32    `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Html                 string   `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chapter) Reset()         { *m = Chapter{} }
func (m *Chapter) String() string { return proto.CompactTextString(m) }
func (*Chapter) ProtoMessage()    {}
func (*Chapter) Descriptor() ([]byte, []int) {
	return fileDescriptor_chapter_bd7a7ba3c89d59b3, []int{2}
}
func (m *Chapter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chapter.Unmarshal(m, b)
}
func (m *Chapter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chapter.Marshal(b, m, deterministic)
}
func (dst *Chapter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chapter.Merge(dst, src)
}
func (m *Chapter) XXX_Size() int {
	return xxx_messageInfo_Chapter.Size(m)
}
func (m *Chapter) XXX_DiscardUnknown() {
	xxx_messageInfo_Chapter.DiscardUnknown(m)
}

var xxx_messageInfo_Chapter proto.InternalMessageInfo

func (m *Chapter) GetStoryId() string {
	if m != nil {
		return m.StoryId
	}
	return ""
}

func (m *Chapter) GetChapterId() int32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

func (m *Chapter) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Chapter) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Chapter) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func init() {
	proto.RegisterType((*GetChapterRequest)(nil), "chapter.GetChapterRequest")
	proto.RegisterType((*GetChapterResponse)(nil), "chapter.GetChapterResponse")
	proto.RegisterType((*Chapter)(nil), "chapter.Chapter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChapterServiceClient is the client API for ChapterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChapterServiceClient interface {
	// GetChapter returns the chapter data for the requested chapter,
	// scraping it first if necessary.
	GetStory(ctx context.Context, in *GetChapterRequest, opts ...grpc.CallOption) (*GetChapterResponse, error)
}

type chapterServiceClient struct {
	cc *grpc.ClientConn
}

func NewChapterServiceClient(cc *grpc.ClientConn) ChapterServiceClient {
	return &chapterServiceClient{cc}
}

func (c *chapterServiceClient) GetStory(ctx context.Context, in *GetChapterRequest, opts ...grpc.CallOption) (*GetChapterResponse, error) {
	out := new(GetChapterResponse)
	err := c.cc.Invoke(ctx, "/chapter.ChapterService/GetStory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChapterServiceServer is the server API for ChapterService service.
type ChapterServiceServer interface {
	// GetChapter returns the chapter data for the requested chapter,
	// scraping it first if necessary.
	GetStory(context.Context, *GetChapterRequest) (*GetChapterResponse, error)
}

func RegisterChapterServiceServer(s *grpc.Server, srv ChapterServiceServer) {
	s.RegisterService(&_ChapterService_serviceDesc, srv)
}

func _ChapterService_GetStory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChapterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChapterServiceServer).GetStory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chapter.ChapterService/GetStory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChapterServiceServer).GetStory(ctx, req.(*GetChapterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChapterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chapter.ChapterService",
	HandlerType: (*ChapterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStory",
			Handler:    _ChapterService_GetStory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/chapter/chapter.proto",
}

func init() { proto.RegisterFile("api/chapter/chapter.proto", fileDescriptor_chapter_bd7a7ba3c89d59b3) }

var fileDescriptor_chapter_bd7a7ba3c89d59b3 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x35, 0x36, 0x69, 0xec, 0x14, 0x4a, 0x1d, 0x04, 0xd7, 0xe8, 0xa1, 0x04, 0x91, 0x9e, 0x52,
	0x88, 0x9f, 0x20, 0x52, 0x8a, 0xb7, 0xe4, 0xe0, 0x79, 0xdb, 0x2c, 0x34, 0x90, 0x74, 0xe3, 0xee,
	0x44, 0xf0, 0xe0, 0xbf, 0x4b, 0x67, 0x37, 0x2a, 0xe8, 0xa9, 0xa7, 0x9d, 0x79, 0xf3, 0xf6, 0xbd,
	0xb7, 0xb3, 0x70, 0x23, 0xbb, 0x7a, 0xb5, 0xdb, 0xcb, 0x8e, 0x94, 0x19, 0xce, 0xac, 0x33, 0x9a,
	0x34, 0xc6, 0xbe, 0x4d, 0xae, 0x99, 0xa3, 0xdb, 0x56, 0x1f, 0x56, 0x96, 0x24, 0xf5, 0xd6, 0x31,
	0xd2, 0x17, 0xb8, 0x5c, 0x2b, 0x7a, 0x72, 0xb4, 0x42, 0xbd, 0xf5, 0xca, 0x12, 0x0a, 0x88, 0x2d,
	0x69, 0xf3, 0xb1, 0xa9, 0x44, 0xb0, 0x08, 0x96, 0x93, 0x62, 0x68, 0xf1, 0x0e, 0x26, 0x5e, 0x72,
	0x53, 0x89, 0xf3, 0x45, 0xb0, 0x8c, 0x8a, 0x1f, 0x20, 0xdd, 0x02, 0xfe, 0x16, 0xb3, 0x9d, 0x3e,
	0x58, 0x85, 0x0f, 0x30, 0x76, 0x96, 0x2c, 0x36, 0xcd, 0x67, 0x99, 0x0b, 0x92, 0x95, 0x8c, 0x16,
	0x7e, 0x8a, 0xf7, 0x10, 0x56, 0x92, 0x24, 0xcb, 0x4e, 0xf3, 0x79, 0x36, 0x3c, 0x65, 0xd0, 0xe3,
	0x69, 0xfa, 0x09, 0xb1, 0x07, 0x4e, 0x8d, 0x89, 0x73, 0x18, 0xf5, 0xa6, 0x11, 0x23, 0xbe, 0x73,
	0x2c, 0xf1, 0x0a, 0x22, 0xaa, 0xa9, 0x51, 0x22, 0x64, 0xcc, 0x35, 0x88, 0x10, 0xee, 0xa9, 0x6d,
	0x44, 0xc4, 0x20, 0xd7, 0xf9, 0x2b, 0xcc, 0xbc, 0x7d, 0xa9, 0xcc, 0x7b, 0xbd, 0x53, 0xf8, 0x0c,
	0x17, 0x6b, 0x45, 0xe5, 0xd1, 0x19, 0x93, 0xef, 0xd0, 0x7f, 0x96, 0x9a, 0xdc, 0xfe, 0x3b, 0x73,
	0x3b, 0x4a, 0xcf, 0xb6, 0x63, 0xfe, 0x8f, 0xc7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xa4,
	0x1d, 0x4a, 0xce, 0x01, 0x00, 0x00,
}
