version: '2'
services:
  reader:
    image: reader
    build:
      context: ../../
      dockerfile: ./build/reader.Dockerfile
    container_name: reader
    depends_on:
      - elasticsearch
      - story-http
      - chapter-http
    labels:
      - "traefik.frontend.rule=Host:${READER_HOST}"
      - "traefik.port=${READER_PORT}"
      - "traefik.enable=true"
  story-http:
    image: story-http
    build:
      context: ../../
      dockerfile: ./build/story-http.Dockerfile
    container_name: story-http
    environment:
      - STORY_GRPC_SERVICE_HOSTNAME=story-grpc
      - STORY_GRPC_SERVICE_PORT=3000
      - STORY_HTTP_SERVICE_PORT=8080
    depends_on:
      - elasticsearch
      - story-grpc
    labels:
      - "traefik.frontend.rule=Host:${READER_HOST};PathPrefix:/story"
      - "traefik.port=8080"
      - "traefik.enable=true"
  chapter-http:
    image: chapter-http
    build:
      context: ../../
      dockerfile: ./build/chapter-http.Dockerfile
    container_name: chapter-http
    environment:
      - CHAPTER_GRPC_SERVICE_HOSTNAME=chapter-grpc
      - CHAPTER_GRPC_SERVICE_PORT=3000
      - CHAPTER_HTTP_SERVICE_PORT=8080
    depends_on:
      - elasticsearch
      - chapter-grpc
    labels:
      - "traefik.frontend.rule=Host:${READER_HOST};PathPrefix:/chapter"
      - "traefik.port=8080"
      - "traefik.enable=true"
  story-grpc:
    image: story-grpc
    build:
      context: ../../
      dockerfile: ./build/story-grpc.Dockerfile
    container_name: story-grpc
    environment:
      - SCRAPER_GRPC_SERVICE_HOSTNAME=scraper-grpc
      - SCRAPER_GRPC_SERVICE_PORT=3000
      - STORY_DB_STRING=postgresql://story_service@roach:26257/reader?sslmode=disable
    depends_on:
      - elasticsearch
      - cockroach
      - scraper-grpc
  chapter-grpc:
    image: chapter-grpc
    build:
      context: ../../
      dockerfile: ./build/chapter-grpc.Dockerfile
    container_name: chapter-grpc
    environment:
      - SCRAPER_GRPC_SERVICE_HOSTNAME=scraper-grpc
      - SCRAPER_GRPC_SERVICE_PORT=3000
      - STORY_GRPC_SERVICE_HOSTNAME=story-grpc
      - STORY_GRPC_SERVICE_PORT=3000
      - CHAPTER_DB_STRING=postgresql://chapter_service@roach:26257/reader?sslmode=disable
    depends_on:
      - elasticsearch
      - cockroach
      - scraper-grpc
      - story-grpc
  scraper-grpc:
    image: scraper-grpc
    build:
      context: ../../
      dockerfile: ./build/scraper-grpc.Dockerfile
    container_name: scraper-grpc
  cockroach:
    image: cockroachdb/cockroach:v2.0.5
    command: start --insecure
    container_name: roach
    volumes:
      - ./cockroach-data/roach:/cockroach/cockroach-data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    labels:
      - "traefik.backend=cockroach"
      - "traefik.frontend.rule=Host:${COCKROACH_HOST}"
      - "traefik.port=${COCKROACH_PORT}"
      - "traefik.enable=true"
  cockroach-init:
    image: cockroach-init
    build:
      context: ../../
      dockerfile: ./build/cockroach-init.Dockerfile
    entrypoint: /cockroach/cr-init.sh
    container_name: roach-init
    depends_on:
      - cockroach
    environment:
      - COCKROACH_HOSTNAME=roach
  elasticsearch:
    image: elasticsearch
    build:
      context: ../../
      dockerfile: ./build/elasticsearch.Dockerfile
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  mongodb:
    image: mongo:3
    container_name: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    command: mongod --smallfiles --logpath=/dev/null
  reverse-proxy:
    image: traefik
    command: --api --docker
    restart: always
    container_name: traefik
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  esdata:
    driver: local
  mongo:
    driver: local